/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Outcome as PrismaOutcome,
  Game as PrismaGame,
} from "@prisma/client";

export class OutcomeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.OutcomeCountArgs, "select">): Promise<number> {
    return this.prisma.outcome.count(args);
  }

  async outcomes<T extends Prisma.OutcomeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutcomeFindManyArgs>
  ): Promise<PrismaOutcome[]> {
    return this.prisma.outcome.findMany<Prisma.OutcomeFindManyArgs>(args);
  }
  async outcome<T extends Prisma.OutcomeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutcomeFindUniqueArgs>
  ): Promise<PrismaOutcome | null> {
    return this.prisma.outcome.findUnique(args);
  }
  async createOutcome<T extends Prisma.OutcomeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutcomeCreateArgs>
  ): Promise<PrismaOutcome> {
    return this.prisma.outcome.create<T>(args);
  }
  async updateOutcome<T extends Prisma.OutcomeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutcomeUpdateArgs>
  ): Promise<PrismaOutcome> {
    return this.prisma.outcome.update<T>(args);
  }
  async deleteOutcome<T extends Prisma.OutcomeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OutcomeDeleteArgs>
  ): Promise<PrismaOutcome> {
    return this.prisma.outcome.delete(args);
  }

  async getGame(parentId: string): Promise<PrismaGame | null> {
    return this.prisma.outcome
      .findUnique({
        where: { id: parentId },
      })
      .game();
  }
}
